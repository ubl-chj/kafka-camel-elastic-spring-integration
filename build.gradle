buildscript {
    dependencies {
        classpath 'io.spring.gradle:dependency-management-plugin:1.0.5.RELEASE'
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion"
    }
}

plugins {
    id 'com.github.hierynomus.license' version '0.15.0'
}

allprojects {
    group = 'de.ubleipzig.kafka.camel.elasticsearch'

    repositories {
        mavenCentral()
        maven { url 'https://repo.spring.io/libs-snapshot' }
        maven { url 'https://repo.spring.io/libs-milestone' }
    }
    configurations {
        all {
            exclude group: 'com.sun.xml.bind', module: 'jaxb-core'
            exclude group: 'com.sun.xml.bind', module: 'jaxb-impl'
        }
    }
}

subprojects { subproject ->
    apply plugin: 'application'
    apply plugin: 'base'
    apply plugin: 'checkstyle'
    apply plugin: 'idea'
    apply plugin: 'java'
    apply plugin: 'jacoco'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'com.github.hierynomus.license'
    
    mainClassName = 'de.ubleipzig.kafka.camel.elasticsearch.KafkaProducerApplication'
    jacoco {
        toolVersion = "0.7.9"
    }

    ext {
        camelLdpVersion = '0.1.0'
        camelVersion = '2.20.0'
        camelSpringIntegrationVersion = '3.0.0-M1'
        commonsIoVersion= '2.6'
        elasticsearchVersion = "6.6.1"
        jaxbVersion = '2.3.0'
        junitVersion = '5.3.2'
        logbackVersion = '1.2.3'
        springBootVersion = '2.1.3.RELEASE'
        springIntegrationVersion = '5.1.3.RELEASE'
        springIntegrationKafkaVersion = '3.1.1.RELEASE'
        springKafkaVersion = '2.2.3.RELEASE'

        checkstyleVersion = '8.8'
    }

    dependencies {
        testCompile("org.junit.jupiter:junit-jupiter-api:$junitVersion")
        testRuntime("org.junit.jupiter:junit-jupiter-engine:$junitVersion")
    }

    checkstyle {
        configFile = rootProject.file('buildtools/src/main/resources/checkstyle/checkstyle.xml')
        configProperties.checkstyleConfigDir = rootProject.file('buildtools/src/main/resources/checkstyle/')
        toolVersion = checkstyleVersion
    }

}

project('kafka') {
    description = 'Kafka Camel Elastic Spring Integration'

    apply plugin: 'org.springframework.boot'

    dependencies {
        compile "org.elasticsearch.client:elasticsearch-rest-high-level-client:$elasticsearchVersion"
        compile "org.springframework.boot:spring-boot-starter-integration:$springBootVersion"
        compile ("org.springframework.integration:spring-integration-kafka:$springIntegrationKafkaVersion") {
            exclude group: 'org.slf4j'
        }
        compile ("commons-io:commons-io:$commonsIoVersion")
        annotationProcessor "org.springframework.boot:spring-boot-configuration-processor:$springBootVersion"
        compile "org.springframework.integration:spring-integration-core"
        compile "org.springframework.kafka:spring-kafka:$springKafkaVersion"
        compile 'com.sun.activation:javax.activation:1.2.0'
        implementation("javax.xml.bind:jaxb-api:$jaxbVersion")
        implementation group: 'org.apache.camel', name: 'camel-kafka', version: camelVersion
        implementation group: 'org.trellisldp', name: 'camel-ldp', version: camelLdpVersion        
        implementation group: 'org.apache.camel', name: 'camel-jackson', version: camelVersion
        compile "org.springframework.boot:spring-boot-starter-test"
        implementation group: 'ch.qos.logback', name: 'logback-classic', version: logbackVersion
    }

    license {
        include "**/*.java"
        //noinspection GroovyAssignabilityCheck
        header rootProject.file('buildtools/src/main/resources/license/HEADER.txt')
        //noinspection GroovyAssignabilityCheck
        strictCheck true
        mapping {
            java = 'SLASHSTAR_STYLE'
        }
    }
    
    task(runConsumer, dependsOn: 'classes', type: JavaExec) {
        main = 'de.ubleipzig.kafka.camel.elasticsearch.KafkaEventConsumerTest'
        classpath = sourceSets.main.runtimeClasspath
    }
}

configure(rootProject) {
    license {
        include "**/*.java"
        //noinspection GroovyAssignabilityCheck
        header rootProject.file('buildtools/src/main/resources/license/HEADER.txt')
        //noinspection GroovyAssignabilityCheck
        strictCheck true
        mapping {
            java = 'SLASHSTAR_STYLE'
        }
    }
}